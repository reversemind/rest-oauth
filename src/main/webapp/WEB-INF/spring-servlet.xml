<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:repository="http://www.springframework.org/schema/data/repository"
       xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2
        http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/data/repository
        http://www.springframework.org/schema/data/repository/spring-repository.xsd">

    <context:annotation-config />

    <!--ACCORDING TO SPECIFICATION Token End-point-->
    <http pattern="/oauth/token"
          create-session="stateless"
          authentication-manager-ref="authenticationManager"
          xmlns="http://www.springframework.org/schema/security">
        <intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY"/>
        <anonymous enabled="false"/>
        <http-basic entry-point-ref="clientAuthenticationEntryPoint"/>
        <custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER"/>
        <access-denied-handler ref="oauthAccessDeniedHandler"/>
    </http>

    <http pattern="/resources/**"
          create-session="never"
          entry-point-ref="oauthAuthenticationEntryPoint"
          xmlns="http://www.springframework.org/schema/security">
        <anonymous enabled="false"/>
        <intercept-url pattern="/resources/**" method="GET"/>
        <custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER"/>
        <access-denied-handler ref="oauthAccessDeniedHandler"/>
    </http>

    <http pattern="/logout"
          create-session="never"
          entry-point-ref="oauthAuthenticationEntryPoint"
          xmlns="http://www.springframework.org/schema/security">
        <anonymous enabled="false"/>
        <intercept-url pattern="/logout" method="GET"/>
        <sec:logout invalidate-session="true" logout-url="/logout" success-handler-ref="logoutSuccessHandler"/>
        <custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER"/>
        <access-denied-handler ref="oauthAccessDeniedHandler"/>
    </http>


    <bean id="logoutSuccessHandler" class="ru.ttk.baloo.rest.security.oauth.Logout">
        <property name="tokenStore" ref="tokenStore"></property>
    </bean>

    <bean id="oauthAuthenticationEntryPoint"
          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
    </bean>

    <bean id="clientAuthenticationEntryPoint"
          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="realmName" value="ttkrest/client"/>
        <property name="typeName" value="Basic"/>
    </bean>

    <bean id="oauthAccessDeniedHandler"
          class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler">
    </bean>

    <bean id="clientCredentialsTokenEndpointFilter"
          class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
    </bean>

    <authentication-manager alias="authenticationManager"
                            xmlns="http://www.springframework.org/schema/security">
        <authentication-provider user-service-ref="clientDetailsUserService"/>
    </authentication-manager>

    <bean id="clientDetailsUserService"
          class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <constructor-arg ref="clientDetails"/>
    </bean>

    <bean id="clientDetails" class="ru.ttk.baloo.rest.security.oauth.SimpleClientDetailsService"/>


    <oauth:authorization-server
            client-details-service-ref="clientDetails"
            token-services-ref="tokenServices">
        <oauth:authorization-code/>
        <oauth:implicit/>
        <oauth:refresh-token/>
        <oauth:client-credentials/>
        <oauth:password authentication-manager-ref="userAuthenticationManager"/>
    </oauth:authorization-server>


    <authentication-manager id="userAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
        <authentication-provider ref="customUserAuthenticationProvider"/>
    </authentication-manager>

    <bean id="customUserAuthenticationProvider" class="ru.ttk.baloo.rest.security.oauth.CustomUserAuthenticationProvider" />

    <oauth:resource-server id="resourceServerFilter" resource-id="ttkrest" token-services-ref="tokenServices"/>

    <bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore"/>

    <bean id="tokenServices"
          class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="tokenStore"/>
        <property name="supportRefreshToken" value="true"/>
        <property name="accessTokenValiditySeconds" value="900"/>
        <property name="clientDetailsService" ref="clientDetails"/>
    </bean>





    <!--Utils & Services-->
    <bean id="sController" class="ru.ttk.baloo.rest.services.SController" />


    <!--<context:component-scan base-package="ru.ttk.baloo.rest.services"/>-->
    <bean id="remoteUserFinder" class="ru.ttk.baloo.rest.services.RemoteUserFinderStub" />

    <mvc:annotation-driven/>
    <!-- Declares explicit support for annotation-driven MVC controllers  @RequestMapping, @Controller -->

    <mvc:default-servlet-handler/>








    <!--SPRING DATA JPA-->
    <!--https://github.com/spring-projects/spring-data-jpa/blob/master/src/test/resources/multiple-entity-manager-integration-context.xml-->

    <jpa:repositories base-package="ru.ttk.baloo.rest"
                      entity-manager-factory-ref="entityManagerFactoryLocal"
                      transaction-manager-ref="transactionManagerLocal" />

    <jpa:repositories base-package="ru.ttk.baloo.remote"
                      entity-manager-factory-ref="entityManagerFactoryRemote"
                      transaction-manager-ref="transactionManagerRemote"/>

    <bean id="localDataSource" class="com.jolbox.bonecp.BoneCPDataSource" >
        <property name="driverClass" value="org.postgresql.Driver" />
        <property name="jdbcUrl" value="jdbc:postgresql://localhost:5432/test_rest" />
        <property name="username" value="test" />
        <property name="password" value="test" />
    </bean>

    <bean id="remoteDataSource" class="com.jolbox.bonecp.BoneCPDataSource" >
        <property name="driverClass" value="org.postgresql.Driver" />
        <property name="jdbcUrl" value="jdbc:postgresql://10.110.56.20:5432/baloo_core" />
        <property name="username" value="test" />
        <property name="password" value="test" />
    </bean>

    <bean id="transactionManagerLocal" class="org.springframework.orm.jpa.JpaTransactionManager" >
        <property name="entityManagerFactory" ref="entityManagerFactoryLocal"/>
    </bean>

    <bean id="transactionManagerRemote" class="org.springframework.orm.jpa.JpaTransactionManager" >
        <property name="entityManagerFactory" ref="entityManagerFactoryRemote"/>
    </bean>

    <bean id="entityManagerFactoryLocal" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="localDataSource" />
        <property name="persistenceUnitName" value="JpaPersistenceUnitLocal" />
        <property name="persistenceXmlLocation" value="classpath*:META-INF/persistence.xml"/>
        <property name="packagesToScan" value="ru.ttk.baloo.rest" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
            </bean>
        </property>
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>
    </bean>

    <bean id="entityManagerFactoryRemote" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="remoteDataSource" />
        <property name="persistenceUnitName" value="JpaPersistenceUnitRemote" />
        <property name="persistenceXmlLocation" value="classpath*:META-INF/persistence-remote.xml"/>
        <property name="packagesToScan" value="ru.ttk.baloo.remote.model" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
            </bean>
        </property>
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>
    </bean>

</beans>


<!--<tx:annotation-driven transaction-manager="transactionManagerDefault" />-->
<!--<tx:annotation-driven />-->
<!--<tx:jta-transaction-manager />-->

<!--for J2EE use http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/orm.html#orm-jpa-->
<!--<jee:jndi-lookup id="myEmf" jndi-name="persistence/myPersistenceUnit"/>-->
<!--<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" >-->
<!--<property name="dataSource" ref="dataSource" />-->
<!--<property name="persistenceProviderClass" value="org.hibernate.ejb.HibernatePersistence" />-->
<!--<property name="packagesToScan" value="ru.ttk.baloo.rest.model" />-->
<!--<property name="loadTimeWeaver">-->
<!--<bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>-->
<!--</property>-->
<!--</bean>-->